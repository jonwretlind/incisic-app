{"ast":null,"code":"var _jsxFileName = \"/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/src/MyCurve.js\";\nimport './MyCurve.css';\nimport { withStyles } from '@mui/material/styles';\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport Finance from 'financejs';\nimport Tabs from '@mui/material/Tabs';\nimport Typography from '@mui/material/Typography';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nconst finance = new Finance();\n\nclass MyCurve extends Component {\n  constructor() {\n    super();\n\n    this.changed = event => {\n      var p = document.getElementById('starting_amt').value == \"\" ? this.def.principal : document.getElementById('starting_amt').value;\n      var c = document.getElementById('contributions').value == \"\" ? this.def.contrib : document.getElementById('contributions').value;\n      var y = document.getElementById('years').value == \"\" ? this.def.yrs : document.getElementById('years').value;\n      var rt = document.getElementById('retirement').value == \"\" ? this.def.retire : document.getElementById('retirement').value;\n      var r = document.getElementById('rate').value == \"\" ? this.def.rate : document.getElementById('rate').value;\n      var w = document.getElementById('withdrawal_rt').value == \"\" ? this.def.w_rate : document.getElementById('withdrawal_rt').value;\n      console.log(\"CHANGED: \" + p, c, y, rt, r, w);\n      this.drawChart(p, c, y, rt, r, w);\n    };\n\n    this.def = {\n      principal: 0,\n      contrib: 1500,\n      yrs: 30,\n      retire: 20,\n      rate: 12,\n      w_rate: 4\n    };\n  }\n\n  componentDidMount() {\n    this.drawChart(this.def.principal, this.def.contrib, this.def.yrs, this.def.retire, this.def.rate, this.def.w_rate);\n  }\n\n  drawChart(principal, contrib, yrs, retire, rate, w_rate) {\n    //compound curve 1\n    //create a dataset\n    let data = [];\n\n    for (var n = 0; n < yrs; n++) {\n      let r = rate / 100; // convert percentage\n\n      let dataBlock = {\n        \"year\": n,\n        \"contrib\": contrib,\n        \"principal\": finance.FV(r, contrib, n),\n        \"retirement\": retire\n      };\n    } //clear first\n\n\n    d3.select(\"#MyCurve\").selectAll(\"svg\").remove(); //then draw chart canvas\n\n    const WIDTH = 700,\n          HEIGHT = 300;\n    const svg = d3.select(\"#MyCurve\").append(\"svg\").attr(\"width\", WIDTH).attr(\"height\", HEIGHT);\n    var xAxis = WIDTH / dataGroup.length;\n    /*  const lineGenerator = d3\n         .line()\n         .x((d) => xScale(xAccessor(d)))\n         .y((d) => yScale(yAccessor(d)))\n         .curve(d3.curveBasis);\n       svg.selectAll(\"rect\")\n          .data(data)\n          .enter()\n          .append(\"path\")\n          .attr(\"x\", (d, i) => i * 70)\n          .attr(\"y\", (d, i) => h - 10 * d)\n          .attr(\"width\", 65)\n          .attr(\"height\", (d, i) => d * 10)\n          .attr(\"fill\", \"green\");\n          */\n  }\n\n  render() {\n    console.log(this.def.principal, this.def.contrib, this.def.yrs, this.def.retire, this.def.rate, this.def.w_rate);\n    return /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        flexGrow: 1,\n        bgcolor: 'background.paper',\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"MyCurveDataEntry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"mycurve-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, \"Starting Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"starting_amt\",\n      placeholder: this.def.principal,\n      onChange: event => this.changed(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, \"Number of Years Invested\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"years\",\n      placeholder: this.def.yrs,\n      onChange: event => this.changed(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, \"Annual Growth Rate (%)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"rate\",\n      placeholder: this.def.rate,\n      onChange: event => this.changed(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, \"Annual Contributions\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"contributions\",\n      placeholder: this.def.contrib,\n      onChange: event => this.changed(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, \"Retirement Year\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"retirement\",\n      placeholder: this.def.retire,\n      onChange: event => this.changed(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, \"Annual Withdrawal Rate (%)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"withdrawal_rt\",\n      placeholder: this.def.w_rate,\n      onChange: event => this.changed(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"MyCurve\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default MyCurve;","map":{"version":3,"sources":["/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/src/MyCurve.js"],"names":["withStyles","React","Component","d3","Finance","Tabs","Typography","Tab","Box","Button","finance","MyCurve","constructor","changed","event","p","document","getElementById","value","def","principal","c","contrib","y","yrs","rt","retire","r","rate","w","w_rate","console","log","drawChart","componentDidMount","data","n","dataBlock","FV","select","selectAll","remove","WIDTH","HEIGHT","svg","append","attr","xAxis","dataGroup","length","render","flexGrow","bgcolor","display"],"mappings":";AAAA,OAAO,eAAP;AACA,SAASA,UAAT,QAA2B,sBAA3B;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,OAAO,GAAG,IAAIN,OAAJ,EAAhB;;AAEA,MAAMO,OAAN,SAAsBT,SAAtB,CAAgC;AAC9BU,EAAAA,WAAW,GAAG;AACZ;;AADY,SA2DdC,OA3Dc,GA2DHC,KAAD,IAAW;AACnB,UAAIC,CAAC,GAAIC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAxC,IAAiD,EAAlD,GAA0D,KAAKC,GAAL,CAASC,SAAnE,GAAgFJ,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAhI;AACA,UAAIG,CAAC,GAAIL,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,IAAkD,EAAnD,GAA0D,KAAKC,GAAL,CAASG,OAAnE,GAAgFN,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAjI;AACA,UAAIK,CAAC,GAAIP,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC,IAA0C,EAA3C,GAA0D,KAAKC,GAAL,CAASK,GAAnE,GAAgFR,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAzH;AACA,UAAIO,EAAE,GAAIT,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,IAA+C,EAAhD,GAAyD,KAAKC,GAAL,CAASO,MAAlE,GAA+EV,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAA9H;AACA,UAAIS,CAAC,GAAIX,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,IAAyC,EAA1C,GAA0D,KAAKC,GAAL,CAASS,IAAnE,GAAgFZ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAxH;AACA,UAAIW,CAAC,GAAIb,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,IAAkD,EAAnD,GAA0D,KAAKC,GAAL,CAASW,MAAnE,GAAgFd,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAjI;AAEAa,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcjB,CAA1B,EAA6BM,CAA7B,EAAgCE,CAAhC,EAAmCE,EAAnC,EAAuCE,CAAvC,EAA0CE,CAA1C;AACA,WAAKI,SAAL,CAAelB,CAAf,EAAkBM,CAAlB,EAAqBE,CAArB,EAAwBE,EAAxB,EAA4BE,CAA5B,EAA+BE,CAA/B;AACD,KArEa;;AAEZ,SAAKV,GAAL,GAAW;AACLC,MAAAA,SAAS,EAAE,CADN;AAELE,MAAAA,OAAO,EAAE,IAFJ;AAGLE,MAAAA,GAAG,EAAE,EAHA;AAILE,MAAAA,MAAM,EAAE,EAJH;AAKLE,MAAAA,IAAI,EAAE,EALD;AAMLE,MAAAA,MAAM,EAAE;AANH,KAAX;AAQD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,SAAL,CAAe,KAAKd,GAAL,CAASC,SAAxB,EAAmC,KAAKD,GAAL,CAASG,OAA5C,EAAqD,KAAKH,GAAL,CAASK,GAA9D,EAAmE,KAAKL,GAAL,CAASO,MAA5E,EAAoF,KAAKP,GAAL,CAASS,IAA7F,EAAmG,KAAKT,GAAL,CAASW,MAA5G;AACD;;AAEDG,EAAAA,SAAS,CAACb,SAAD,EAAYE,OAAZ,EAAqBE,GAArB,EAA0BE,MAA1B,EAAkCE,IAAlC,EAAwCE,MAAxC,EAAgD;AACvD;AACA;AACA,QAAIK,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,GAApB,EAAyBY,CAAC,EAA1B,EAA8B;AAC5B,UAAIT,CAAC,GAAGC,IAAI,GAAC,GAAb,CAD4B,CACV;;AAClB,UAAIS,SAAS,GAAG;AACZ,gBAAQD,CADI;AAEZ,mBAAWd,OAFC;AAGZ,qBAAaZ,OAAO,CAAC4B,EAAR,CAAWX,CAAX,EAAcL,OAAd,EAAuBc,CAAvB,CAHD;AAIZ,sBAAcV;AAJF,OAAhB;AAMD,KAZsD,CAavD;;;AACAvB,IAAAA,EAAE,CAACoC,MAAH,CAAU,UAAV,EAAsBC,SAAtB,CAAgC,KAAhC,EAAuCC,MAAvC,GAduD,CAgBvD;;AACA,UAAMC,KAAK,GAAG,GAAd;AAAA,UAAmBC,MAAM,GAAG,GAA5B;AACA,UAAMC,GAAG,GAAGzC,EAAE,CAACoC,MAAH,CAAU,UAAV,EACCM,MADD,CACQ,KADR,EAECC,IAFD,CAEM,OAFN,EAEeJ,KAFf,EAGCI,IAHD,CAGM,QAHN,EAGgBH,MAHhB,CAAZ;AAKA,QAAII,KAAK,GAAGL,KAAK,GAAGM,SAAS,CAACC,MAA9B;AAEF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG;;AAcDC,EAAAA,MAAM,GAAG;AACPnB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,GAAL,CAASC,SAArB,EAAgC,KAAKD,GAAL,CAASG,OAAzC,EAAkD,KAAKH,GAAL,CAASK,GAA3D,EAAgE,KAAKL,GAAL,CAASO,MAAzE,EAAiF,KAAKP,GAAL,CAASS,IAA1F,EAAgG,KAAKT,GAAL,CAASW,MAAzG;AACA,wBACI,oBAAC,GAAD;AACE,MAAA,EAAE,EAAE;AAAEqB,QAAAA,QAAQ,EAAE,CAAZ;AAAeC,QAAAA,OAAO,EAAE,kBAAxB;AAA4CC,QAAAA,OAAO,EAAE;AAArD,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,EAAE,EAAC,cADX;AAEQ,MAAA,WAAW,EAAE,KAAKlC,GAAL,CAASC,SAF9B;AAGQ,MAAA,QAAQ,EAAGN,KAAD,IAAS,KAAKD,OAAL,CAAaC,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,EAAE,EAAC,OADX;AAEQ,MAAA,WAAW,EAAE,KAAKK,GAAL,CAASK,GAF9B;AAGQ,MAAA,QAAQ,EAAGV,KAAD,IAAS,KAAKD,OAAL,CAAaC,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,EAAE,EAAC,MADX;AAEQ,MAAA,WAAW,EAAE,KAAKK,GAAL,CAASS,IAF9B;AAGQ,MAAA,QAAQ,EAAGd,KAAD,IAAS,KAAKD,OAAL,CAAaC,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAfF,CADF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,EAAE,EAAC,eADX;AAEQ,MAAA,WAAW,EAAE,KAAKK,GAAL,CAASG,OAF9B;AAGQ,MAAA,QAAQ,EAAGR,KAAD,IAAS,KAAKD,OAAL,CAAaC,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,EAAE,EAAC,YADX;AAEQ,MAAA,WAAW,EAAE,KAAKK,GAAL,CAASO,MAF9B;AAGQ,MAAA,QAAQ,EAAGZ,KAAD,IAAS,KAAKD,OAAL,CAAaC,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,EAAE,EAAC,eADX;AAEQ,MAAA,WAAW,EAAE,KAAKK,GAAL,CAASW,MAF9B;AAGQ,MAAA,QAAQ,EAAGhB,KAAD,IAAS,KAAKD,OAAL,CAAaC,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAfF,CAxBF,CADA,CADF,CADF,eA2DE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3DF,CAHA,CADJ;AAmED;;AA7I6B;;AAiJhC,eAAeH,OAAf","sourcesContent":["import './MyCurve.css';\nimport { withStyles } from '@mui/material/styles';\nimport React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport Finance from 'financejs';\nimport Tabs from '@mui/material/Tabs';\nimport Typography from '@mui/material/Typography';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\n\nconst finance = new Finance();\n\nclass MyCurve extends Component {\n  constructor() {\n    super();\n    this.def = {\n          principal: 0,\n          contrib: 1500,\n          yrs: 30,\n          retire: 20,\n          rate: 12,\n          w_rate: 4\n        };\n  }\n\n  componentDidMount() {\n    this.drawChart(this.def.principal, this.def.contrib, this.def.yrs, this.def.retire, this.def.rate, this.def.w_rate);\n  }\n\n  drawChart(principal, contrib, yrs, retire, rate, w_rate) {\n    //compound curve 1\n    //create a dataset\n    let data = [];\n    for (var n = 0; n < yrs; n++) {\n      let r = rate/100; // convert percentage\n      let dataBlock = {\n          \"year\": n,\n          \"contrib\": contrib,\n          \"principal\": finance.FV(r, contrib, n),\n          \"retirement\": retire\n        }\n    }\n    //clear first\n    d3.select(\"#MyCurve\").selectAll(\"svg\").remove();\n\n    //then draw chart canvas\n    const WIDTH = 700, HEIGHT = 300;\n    const svg = d3.select(\"#MyCurve\")\n                .append(\"svg\")\n                .attr(\"width\", WIDTH)\n                .attr(\"height\", HEIGHT);\n\n    var xAxis = WIDTH / dataGroup.length;\n\n  /*  const lineGenerator = d3\n       .line()\n       .x((d) => xScale(xAccessor(d)))\n       .y((d) => yScale(yAccessor(d)))\n       .curve(d3.curveBasis);\n\n    svg.selectAll(\"rect\")\n        .data(data)\n        .enter()\n        .append(\"path\")\n        .attr(\"x\", (d, i) => i * 70)\n        .attr(\"y\", (d, i) => h - 10 * d)\n        .attr(\"width\", 65)\n        .attr(\"height\", (d, i) => d * 10)\n        .attr(\"fill\", \"green\");\n        */\n  }\n\n  changed = (event) => {\n    var p = (document.getElementById('starting_amt').value == \"\")   ? this.def.principal  : document.getElementById('starting_amt').value;\n    var c = (document.getElementById('contributions').value == \"\")  ? this.def.contrib    : document.getElementById('contributions').value;\n    var y = (document.getElementById('years').value == \"\")          ? this.def.yrs        : document.getElementById('years').value;\n    var rt = (document.getElementById('retirement').value == \"\")    ? this.def.retire     : document.getElementById('retirement').value;\n    var r = (document.getElementById('rate').value == \"\")           ? this.def.rate       : document.getElementById('rate').value;\n    var w = (document.getElementById('withdrawal_rt').value == \"\")  ? this.def.w_rate     : document.getElementById('withdrawal_rt').value;\n\n    console.log(\"CHANGED: \" + p, c, y, rt, r, w);\n    this.drawChart(p, c, y, rt, r, w);\n  }\n\n  render() {\n    console.log(this.def.principal, this.def.contrib, this.def.yrs, this.def.retire, this.def.rate, this.def.w_rate);\n    return (\n        <Box\n          sx={{ flexGrow: 1, bgcolor: 'background.paper', display: 'flex'}}\n        >\n        <div className=\"container\">\n          <div id=\"MyCurveDataEntry\">\n            <table className=\"mycurve-data\">\n            <tbody>\n              <tr>\n                <td>\n                  <label>Starting Amount</label>\n                  <input  type=\"number\"\n                          id=\"starting_amt\"\n                          placeholder={this.def.principal}\n                          onChange={(event)=>this.changed(event)}/>\n                </td>\n                <td>\n                  <label>Number of Years Invested</label>\n                  <input  type=\"number\"\n                          id=\"years\"\n                          placeholder={this.def.yrs}\n                          onChange={(event)=>this.changed(event)}/>\n                </td>\n                <td>\n                  <label>Annual Growth Rate (%)</label>\n                  <input  type=\"number\"\n                          id=\"rate\"\n                          placeholder={this.def.rate}\n                          onChange={(event)=>this.changed(event)}/>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <label>Annual Contributions</label>\n                  <input  type=\"number\"\n                          id=\"contributions\"\n                          placeholder={this.def.contrib}\n                          onChange={(event)=>this.changed(event)}/>\n                </td>\n                <td>\n                  <label>Retirement Year</label>\n                  <input  type=\"number\"\n                          id=\"retirement\"\n                          placeholder={this.def.retire}\n                          onChange={(event)=>this.changed(event)}/>\n                </td>\n                <td>\n                  <label>Annual Withdrawal Rate (%)</label>\n                  <input  type=\"number\"\n                          id=\"withdrawal_rt\"\n                          placeholder={this.def.w_rate}\n                          onChange={(event)=>this.changed(event)}/>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n            {/*<Button className=\"mycurve-btn\"\n                    variant=\"contained\"\n                    size=\"large\"\n            >\n              See My Curve\n            </Button>*/}\n          </div>\n          <div id=\"MyCurve\"></div>\n        </div>\n      </Box>\n    )\n  }\n\n}\n\nexport default MyCurve;\n"]},"metadata":{},"sourceType":"module"}