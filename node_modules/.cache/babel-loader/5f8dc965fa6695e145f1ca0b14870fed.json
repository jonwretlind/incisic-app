{"ast":null,"code":"import $ from 'jquery';\nimport React from 'react';\nimport { Component } from 'react';\n\nclass RORCalc extends Component {\n  constructor() {\n    super();\n    /* ======================================================\n       =========== AVERAGE VS ACTUAL ROR CALC JS ============\n       ====================================================== */\n    // +++++++++++++++++++++++ //\n    // ++ Global Variables  ++ //\n    // +++++++++++++++++++++++ //\n\n    let annPay,\n        mngFee,\n        intRate,\n        numYears,\n        myCalcPVonIR,\n        actROR,\n        BOY,\n        IL,\n        ILPC,\n        ILVal,\n        startYear = 1963,\n        checkedUsePortfolio,\n        checkedStocks,\n        checkedBonds,\n        checkedTreas,\n        percentStocks,\n        percentBonds,\n        percentTreas,\n        loggedInState = false,\n        calcName,\n        actv,\n        theData,\n        stBOY,\n        stAnnPay,\n        bnAnnPay,\n        bnBOY,\n        trAnnPay,\n        trBOY,\n        newBalance,\n        tyrs = 1,\n        recalcFlag = false,\n        EconData = new Array(),\n        RORTableArray = new Array(),\n        BOYBalance = new Array(),\n        EOYBalance = new Array(); //const mathfuncts = new MathFuncts();\n    //const recalcvalues = new reCalcValues();\n    //const dispcomp = new displayComposite();\n  }\n\n  jQuery() {\n    // +++++++++++++++++++++++++++ //\n    // +++ Data/Ajax Functions +++ //\n    // +++++++++++++++++++++++++++ //\n    // uses REST API http://localhost:5000/all\n    $.get(\"http://18.188.124.75:5000/all\", function (res) {\n      EconData = JSON.parse(res);\n    });\n  }\n\n  componentDidMount() {\n    this.jQuery();\n  }\n\n  render() {\n    return document.write(this.EconData);\n  }\n\n}\n\nexport default RORCalc;","map":{"version":3,"sources":["/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/src/ror.js"],"names":["$","React","Component","RORCalc","constructor","annPay","mngFee","intRate","numYears","myCalcPVonIR","actROR","BOY","IL","ILPC","ILVal","startYear","checkedUsePortfolio","checkedStocks","checkedBonds","checkedTreas","percentStocks","percentBonds","percentTreas","loggedInState","calcName","actv","theData","stBOY","stAnnPay","bnAnnPay","bnBOY","trAnnPay","trBOY","newBalance","tyrs","recalcFlag","EconData","Array","RORTableArray","BOYBalance","EOYBalance","jQuery","get","res","JSON","parse","componentDidMount","render","document","write"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAGA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC/BE,EAAAA,WAAW,GAAG;AACX;AACA;AACJ;AACA;AAEO;AACA;AACA;;AAEA,QAAIC,MAAJ;AAAA,QACIC,MADJ;AAAA,QAEIC,OAFJ;AAAA,QAGIC,QAHJ;AAAA,QAIIC,YAJJ;AAAA,QAKIC,MALJ;AAAA,QAMIC,GANJ;AAAA,QAOIC,EAPJ;AAAA,QAQIC,IARJ;AAAA,QASIC,KATJ;AAAA,QAUIC,SAAS,GAAG,IAVhB;AAAA,QAWIC,mBAXJ;AAAA,QAYIC,aAZJ;AAAA,QAaIC,YAbJ;AAAA,QAcIC,YAdJ;AAAA,QAeIC,aAfJ;AAAA,QAgBIC,YAhBJ;AAAA,QAiBIC,YAjBJ;AAAA,QAkBIC,aAAa,GAAG,KAlBpB;AAAA,QAmBIC,QAnBJ;AAAA,QAoBIC,IApBJ;AAAA,QAqBIC,OArBJ;AAAA,QAsBIC,KAtBJ;AAAA,QAuBIC,QAvBJ;AAAA,QAwBIC,QAxBJ;AAAA,QAyBIC,KAzBJ;AAAA,QA0BIC,QA1BJ;AAAA,QA2BIC,KA3BJ;AAAA,QA4BIC,UA5BJ;AAAA,QA6BIC,IAAI,GAAG,CA7BX;AAAA,QA8BIC,UAAU,GAAG,KA9BjB;AAAA,QA+BIC,QAAQ,GAAG,IAAIC,KAAJ,EA/Bf;AAAA,QAgCIC,aAAa,GAAG,IAAID,KAAJ,EAhCpB;AAAA,QAiCIE,UAAU,GAAG,IAAIF,KAAJ,EAjCjB;AAAA,QAkCIG,UAAU,GAAG,IAAIH,KAAJ,EAlCjB,CAVQ,CA8CX;AACA;AACA;AACH;;AAECI,EAAAA,MAAM,GAAG;AACN;AACA;AACA;AACA;AACAzC,IAAAA,CAAC,CAAC0C,GAAF,CAAM,+BAAN,EAAuC,UAASC,GAAT,EAAc;AACpDP,MAAAA,QAAQ,GAAGQ,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAX;AACA,KAFD;AAGF;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,MAAL;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WACEC,QAAQ,CAACC,KAAT,CAAe,KAAKb,QAApB,CADF;AAGD;;AAtE6B;;AAyEhC,eAAejC,OAAf","sourcesContent":["import $ from 'jquery';\nimport React from 'react';\nimport { Component } from 'react';\n\n\nclass RORCalc extends Component {\n\tconstructor() {\n    super()\n    /* ======================================================\n       =========== AVERAGE VS ACTUAL ROR CALC JS ============\n       ====================================================== */\n\n       // +++++++++++++++++++++++ //\n       // ++ Global Variables  ++ //\n       // +++++++++++++++++++++++ //\n\n       let annPay,\n           mngFee,\n           intRate,\n           numYears,\n           myCalcPVonIR,\n           actROR,\n           BOY,\n           IL,\n           ILPC,\n           ILVal,\n           startYear = 1963,\n           checkedUsePortfolio,\n           checkedStocks,\n           checkedBonds,\n           checkedTreas,\n           percentStocks,\n           percentBonds,\n           percentTreas,\n           loggedInState = false,\n           calcName,\n           actv,\n           theData,\n           stBOY,\n           stAnnPay,\n           bnAnnPay,\n           bnBOY,\n           trAnnPay,\n           trBOY,\n           newBalance,\n           tyrs = 1,\n           recalcFlag = false,\n           EconData = new Array(),\n           RORTableArray = new Array(),\n           BOYBalance = new Array(),\n           EOYBalance = new Array();\n\n    //const mathfuncts = new MathFuncts();\n    //const recalcvalues = new reCalcValues();\n    //const dispcomp = new displayComposite();\n}\n\n  jQuery() {\n    \t// +++++++++++++++++++++++++++ //\n    \t// +++ Data/Ajax Functions +++ //\n    \t// +++++++++++++++++++++++++++ //\n    \t// uses REST API http://localhost:5000/all\n    \t$.get(\"http://18.188.124.75:5000/all\", function(res) {\n    \t\tEconData = JSON.parse(res);\n    \t});\n  }\n\n  componentDidMount() {\n    this.jQuery()\n  }\n\n  render() {\n    return(\n      document.write(this.EconData)\n    );\n  }\n}\n\nexport default RORCalc;\n"]},"metadata":{},"sourceType":"module"}