{"ast":null,"code":"//Finance.js\n//For more information, visit http://financejs.org\n//Copyright 2014 - 2015 Essam Al Joubori, MIT license\n// Instantiate a Finance class\nvar Finance = function () {}; // Present Value (PV)\n\n\nFinance.prototype.PV = function (rate, cf1, numOfPeriod) {\n  numOfPeriod = typeof numOfPeriod !== 'undefined' ? numOfPeriod : 1;\n  var rate = rate / 100,\n      pv;\n  pv = cf1 / Math.pow(1 + rate, numOfPeriod);\n  return Math.round(pv * 100) / 100;\n}; // Future Value (FV)\n\n\nFinance.prototype.FV = function (rate, cf0, numOfPeriod) {\n  var rate = rate / 100,\n      fv;\n  fv = cf0 * Math.pow(1 + rate, numOfPeriod);\n  return Math.round(fv * 100) / 100;\n}; // Net Present Value (NPV)\n\n\nFinance.prototype.NPV = function (rate) {\n  var rate = rate / 100,\n      npv = arguments[1];\n\n  for (var i = 2; i < arguments.length; i++) {\n    npv += arguments[i] / Math.pow(1 + rate, i - 1);\n  }\n\n  return Math.round(npv * 100) / 100;\n}; // seekZero seeks the zero point of the function fn(x), accurate to within x \\pm 0.01. fn(x) must be decreasing with x.\n\n\nfunction seekZero(fn) {\n  var x = 1;\n\n  while (fn(x) > 0) {\n    x += 1;\n  }\n\n  while (fn(x) < 0) {\n    x -= 0.01;\n  }\n\n  return x + 0.01;\n} // Internal Rate of Return (IRR)\n\n\nFinance.prototype.IRR = function (cfs) {\n  var args = arguments;\n  var numberOfTries = 1; // Cash flow values must contain at least one positive value and one negative value\n\n  var positive, negative;\n  Array.prototype.slice.call(args).forEach(function (value) {\n    if (value > 0) positive = true;\n    if (value < 0) negative = true;\n  });\n  if (!positive || !negative) throw new Error('IRR requires at least one positive value and one negative value');\n\n  function npv(rate) {\n    numberOfTries++;\n\n    if (numberOfTries > 1000) {\n      throw new Error('IRR can\\'t find a result');\n    }\n\n    var rrate = 1 + rate / 100;\n    var npv = args[0];\n\n    for (var i = 1; i < args.length; i++) {\n      npv += args[i] / Math.pow(rrate, i);\n    }\n\n    return npv;\n  }\n\n  return Math.round(seekZero(npv) * 100) / 100;\n}; // Payback Period (PP)\n\n\nFinance.prototype.PP = function (numOfPeriods, cfs) {\n  // for even cash flows\n  if (numOfPeriods === 0) {\n    return Math.abs(arguments[1]) / arguments[2];\n  } // for uneven cash flows\n\n\n  var cumulativeCashFlow = arguments[1];\n  var yearsCounter = 1;\n\n  for (i = 2; i < arguments.length; i++) {\n    cumulativeCashFlow += arguments[i];\n\n    if (cumulativeCashFlow > 0) {\n      yearsCounter += (cumulativeCashFlow - arguments[i]) / arguments[i];\n      return yearsCounter;\n    } else {\n      yearsCounter++;\n    }\n  }\n}; // Return on Investment (ROI)\n\n\nFinance.prototype.ROI = function (cf0, earnings) {\n  var roi = (earnings - Math.abs(cf0)) / Math.abs(cf0) * 100;\n  return Math.round(roi * 100) / 100;\n}; // Amortization\n\n\nFinance.prototype.AM = function (principal, rate, period, yearOrMonth, payAtBeginning) {\n  var numerator, denominator, am;\n  var ratePerPeriod = rate / 12 / 100; // for inputs in years\n\n  if (!yearOrMonth) {\n    numerator = buildNumerator(period * 12);\n    denominator = Math.pow(1 + ratePerPeriod, period * 12) - 1; // for inputs in months\n  } else if (yearOrMonth === 1) {\n    numerator = buildNumerator(period);\n    denominator = Math.pow(1 + ratePerPeriod, period) - 1;\n  } else {\n    console.log('not defined');\n  }\n\n  am = principal * (numerator / denominator);\n  return Math.round(am * 100) / 100;\n\n  function buildNumerator(numInterestAccruals) {\n    if (payAtBeginning) {\n      //if payments are made in the beginning of the period, then interest shouldn't be calculated for first period\n      numInterestAccruals -= 1;\n    }\n\n    return ratePerPeriod * Math.pow(1 + ratePerPeriod, numInterestAccruals);\n  }\n}; // Profitability Index (PI)\n\n\nFinance.prototype.PI = function (rate, cfs) {\n  var totalOfPVs = 0,\n      PI;\n\n  for (var i = 2; i < arguments.length; i++) {\n    var discountFactor; // calculate discount factor\n\n    discountFactor = 1 / Math.pow(1 + rate / 100, i - 1);\n    totalOfPVs += arguments[i] * discountFactor;\n  }\n\n  PI = totalOfPVs / Math.abs(arguments[1]);\n  return Math.round(PI * 100) / 100;\n}; // Discount Factor (DF)\n\n\nFinance.prototype.DF = function (rate, numOfPeriods) {\n  var dfs = [],\n      discountFactor;\n\n  for (var i = 1; i < numOfPeriods; i++) {\n    discountFactor = 1 / Math.pow(1 + rate / 100, i - 1);\n    roundedDiscountFactor = Math.ceil(discountFactor * 1000) / 1000;\n    dfs.push(roundedDiscountFactor);\n  }\n\n  return dfs;\n}; // Compound Interest (CI)\n\n\nFinance.prototype.CI = function (rate, numOfCompoundings, principal, numOfPeriods) {\n  var CI = principal * Math.pow(1 + rate / 100 / numOfCompoundings, numOfCompoundings * numOfPeriods);\n  return Math.round(CI * 100) / 100;\n}; // Compound Annual Growth Rate (CAGR)\n\n\nFinance.prototype.CAGR = function (beginningValue, endingValue, numOfPeriods) {\n  var CAGR = Math.pow(endingValue / beginningValue, 1 / numOfPeriods) - 1;\n  return Math.round(CAGR * 10000) / 100;\n}; // Leverage Ratio (LR)\n\n\nFinance.prototype.LR = function (totalLiabilities, totalDebts, totalIncome) {\n  return (totalLiabilities + totalDebts) / totalIncome;\n}; // Rule of 72\n\n\nFinance.prototype.R72 = function (rate) {\n  return 72 / rate;\n}; // Weighted Average Cost of Capital (WACC)\n\n\nFinance.prototype.WACC = function (marketValueOfEquity, marketValueOfDebt, costOfEquity, costOfDebt, taxRate) {\n  E = marketValueOfEquity;\n  D = marketValueOfDebt;\n  V = marketValueOfEquity + marketValueOfDebt;\n  Re = costOfEquity;\n  Rd = costOfDebt;\n  T = taxRate;\n  var WACC = E / V * Re / 100 + D / V * Rd / 100 * (1 - T / 100);\n  return Math.round(WACC * 1000) / 10;\n}; // PMT calculates the payment for a loan based on constant payments and a constant interest rate\n\n\nFinance.prototype.PMT = function (fractionalRate, numOfPayments, principal) {\n  return -principal * fractionalRate / (1 - Math.pow(1 + fractionalRate, -numOfPayments));\n}; // IAR calculates the Inflation-adjusted return\n\n\nFinance.prototype.IAR = function (investmentReturn, inflationRate) {\n  return 100 * ((1 + investmentReturn) / (1 + inflationRate) - 1);\n}; // XIRR - IRR for irregular intervals\n\n\nFinance.prototype.XIRR = function (cfs, dts, guess) {\n  if (cfs.length != dts.length) throw new Error('Number of cash flows and dates should match');\n  var positive, negative;\n  Array.prototype.slice.call(cfs).forEach(function (value) {\n    if (value > 0) positive = true;\n    if (value < 0) negative = true;\n  });\n  if (!positive || !negative) throw new Error('XIRR requires at least one positive value and one negative value');\n  guess = !!guess ? guess : 0;\n  var limit = 100; //loop limit\n\n  var guess_last;\n  var durs = [];\n  durs.push(0); //Create Array of durations from First date\n\n  for (var i = 1; i < dts.length; i++) {\n    durs.push(durYear(dts[0], dts[i]));\n  }\n\n  do {\n    guess_last = guess;\n    guess = guess_last - sumEq(cfs, durs, guess_last);\n    limit--;\n  } while (guess_last.toFixed(5) != guess.toFixed(5) && limit > 0);\n\n  var xirr = guess_last.toFixed(5) != guess.toFixed(5) ? null : guess * 100;\n  return Math.round(xirr * 100) / 100;\n}; //Returns Sum of f(x)/f'(x)\n\n\nfunction sumEq(cfs, durs, guess) {\n  var sum_fx = 0;\n  var sum_fdx = 0;\n\n  for (var i = 0; i < cfs.length; i++) {\n    sum_fx = sum_fx + cfs[i] / Math.pow(1 + guess, durs[i]);\n  }\n\n  for (i = 0; i < cfs.length; i++) {\n    sum_fdx = sum_fdx + -cfs[i] * durs[i] * Math.pow(1 + guess, -1 - durs[i]);\n  }\n\n  return sum_fx / sum_fdx;\n} //Returns duration in years between two dates\n\n\nfunction durYear(first, last) {\n  return Math.abs(last.getTime() - first.getTime()) / (1000 * 3600 * 24 * 365);\n}\n\nif (typeof exports !== 'undefined') {\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Finance;\n    module.exports.Finance = Finance;\n  }\n}","map":{"version":3,"sources":["/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/node_modules/financejs/finance.js"],"names":["Finance","prototype","PV","rate","cf1","numOfPeriod","pv","Math","pow","round","FV","cf0","fv","NPV","npv","arguments","i","length","seekZero","fn","x","IRR","cfs","args","numberOfTries","positive","negative","Array","slice","call","forEach","value","Error","rrate","PP","numOfPeriods","abs","cumulativeCashFlow","yearsCounter","ROI","earnings","roi","AM","principal","period","yearOrMonth","payAtBeginning","numerator","denominator","am","ratePerPeriod","buildNumerator","console","log","numInterestAccruals","PI","totalOfPVs","discountFactor","DF","dfs","roundedDiscountFactor","ceil","push","CI","numOfCompoundings","CAGR","beginningValue","endingValue","LR","totalLiabilities","totalDebts","totalIncome","R72","WACC","marketValueOfEquity","marketValueOfDebt","costOfEquity","costOfDebt","taxRate","E","D","V","Re","Rd","T","PMT","fractionalRate","numOfPayments","IAR","investmentReturn","inflationRate","XIRR","dts","guess","limit","guess_last","durs","durYear","sumEq","toFixed","xirr","sum_fx","sum_fdx","first","last","getTime","exports","module"],"mappings":"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","sourcesContent":["//Finance.js\n//For more information, visit http://financejs.org\n//Copyright 2014 - 2015 Essam Al Joubori, MIT license\n\n// Instantiate a Finance class\nvar Finance = function() {};\n\n// Present Value (PV)\nFinance.prototype.PV = function (rate, cf1, numOfPeriod) {\n  numOfPeriod = typeof numOfPeriod !== 'undefined' ? numOfPeriod : 1;\n  var rate = rate/100, pv;\n  pv = cf1 / Math.pow((1 + rate),numOfPeriod);\n  return Math.round(pv * 100) / 100;\n};\n\n// Future Value (FV)\nFinance.prototype.FV = function (rate, cf0, numOfPeriod) {\n  var rate = rate/100, fv;\n  fv = cf0 * Math.pow((1 + rate), numOfPeriod);\n  return Math.round(fv * 100) / 100;\n};\n\n// Net Present Value (NPV)\nFinance.prototype.NPV = function (rate) {\n  var rate = rate/100, npv = arguments[1];\n  for (var i = 2; i < arguments.length; i++) {\n    npv +=(arguments[i] / Math.pow((1 + rate), i - 1));\n  }\n  return Math.round(npv * 100) / 100;\n};\n\n// seekZero seeks the zero point of the function fn(x), accurate to within x \\pm 0.01. fn(x) must be decreasing with x.\nfunction seekZero(fn) {\n  var x = 1;\n  while (fn(x) > 0) {\n    x += 1;\n  }\n  while (fn(x) < 0) {\n    x -= 0.01\n  }\n  return x + 0.01;\n}\n\n// Internal Rate of Return (IRR)\nFinance.prototype.IRR = function(cfs) {\n  var args = arguments;\n  var numberOfTries = 1;\n  // Cash flow values must contain at least one positive value and one negative value\n  var positive, negative;\n  Array.prototype.slice.call(args).forEach(function (value) {\n    if (value > 0) positive = true;\n    if (value < 0) negative = true;\n  })\n  if (!positive || !negative) throw new Error('IRR requires at least one positive value and one negative value');\n  function npv(rate) {\n    numberOfTries++;\n    if (numberOfTries > 1000) {\n      throw new Error('IRR can\\'t find a result');\n    }\n    var rrate = (1 + rate/100);\n    var npv = args[0];\n    for (var i = 1; i < args.length; i++) {\n      npv += (args[i] / Math.pow(rrate, i));\n    }\n    return npv;\n  }\n  return Math.round(seekZero(npv) * 100) / 100;\n};\n\n// Payback Period (PP)\nFinance.prototype.PP = function(numOfPeriods, cfs) {\n  // for even cash flows\n  if (numOfPeriods === 0) {\n    return Math.abs(arguments[1]) / arguments[2];\n  }\n  // for uneven cash flows\n  var cumulativeCashFlow = arguments[1];\n  var yearsCounter = 1;\n  for (i = 2; i < arguments.length; i++) {\n    cumulativeCashFlow += arguments[i];\n    if (cumulativeCashFlow > 0) {\n      yearsCounter += (cumulativeCashFlow - arguments[i]) / arguments[i];\n      return yearsCounter;\n    } else {\n      yearsCounter++;\n    }\n  }\n};\n\n// Return on Investment (ROI)\nFinance.prototype.ROI = function(cf0, earnings) {\n  var roi = (earnings - Math.abs(cf0)) / Math.abs(cf0) * 100;\n  return Math.round(roi * 100) / 100;\n};\n\n// Amortization\nFinance.prototype.AM = function (principal, rate, period, yearOrMonth, payAtBeginning) {\n  var numerator, denominator, am;\n  var ratePerPeriod = rate / 12 / 100;\n\n  // for inputs in years\n  if (!yearOrMonth) {\n    numerator = buildNumerator(period * 12);\n    denominator = Math.pow((1 + ratePerPeriod), period * 12) - 1;\n\n  // for inputs in months\n  } else if (yearOrMonth === 1) {\n    numerator = buildNumerator(period)\n    denominator = Math.pow((1 + ratePerPeriod), period) - 1;\n\n  } else {\n    console.log('not defined');\n  }\n  am = principal * (numerator / denominator);\n  return Math.round(am * 100) / 100;\n\n  function buildNumerator(numInterestAccruals){\n    if( payAtBeginning ){\n      //if payments are made in the beginning of the period, then interest shouldn't be calculated for first period\n      numInterestAccruals -= 1;\n    }\n    return ratePerPeriod * Math.pow((1 + ratePerPeriod), numInterestAccruals);\n  }\n};\n\n// Profitability Index (PI)\nFinance.prototype.PI = function(rate, cfs){\n  var totalOfPVs = 0, PI;\n  for (var i = 2; i < arguments.length; i++) {\n    var discountFactor;\n    // calculate discount factor\n    discountFactor = 1 / Math.pow((1 + rate/100), (i - 1));\n    totalOfPVs += arguments[i] * discountFactor;\n  }\n  PI = totalOfPVs/Math.abs(arguments[1]);\n  return Math.round(PI * 100) / 100;\n};\n\n// Discount Factor (DF)\nFinance.prototype.DF = function(rate, numOfPeriods) {\n  var dfs = [], discountFactor;\n  for (var i = 1; i < numOfPeriods; i++) {\n    discountFactor = 1 / Math.pow((1 + rate/100), (i - 1));\n    roundedDiscountFactor = Math.ceil(discountFactor * 1000)/1000;\n    dfs.push(roundedDiscountFactor);\n  }\n  return dfs;\n};\n\n// Compound Interest (CI)\nFinance.prototype.CI = function(rate, numOfCompoundings, principal, numOfPeriods) {\n  var CI = principal * Math.pow((1 + ((rate/100)/ numOfCompoundings)), numOfCompoundings * numOfPeriods);\n  return Math.round(CI * 100) / 100;\n};\n\n// Compound Annual Growth Rate (CAGR)\nFinance.prototype.CAGR = function(beginningValue, endingValue, numOfPeriods) {\n  var CAGR = Math.pow((endingValue / beginningValue), 1 / numOfPeriods) - 1;\n  return Math.round(CAGR * 10000) / 100;\n};\n\n// Leverage Ratio (LR)\nFinance.prototype.LR = function(totalLiabilities, totalDebts, totalIncome) {\n  return (totalLiabilities  + totalDebts) / totalIncome;\n};\n\n// Rule of 72\nFinance.prototype.R72 = function(rate) {\n  return 72 / rate;\n};\n\n// Weighted Average Cost of Capital (WACC)\nFinance.prototype.WACC = function(marketValueOfEquity, marketValueOfDebt, costOfEquity, costOfDebt, taxRate) {\n  E = marketValueOfEquity;\n  D = marketValueOfDebt;\n  V =  marketValueOfEquity + marketValueOfDebt;\n  Re = costOfEquity;\n  Rd = costOfDebt;\n  T = taxRate;\n\n  var WACC = ((E / V) * Re/100) + (((D / V) * Rd/100) * (1 - T/100));\n  return Math.round(WACC * 1000) / 10;\n};\n\n// PMT calculates the payment for a loan based on constant payments and a constant interest rate\nFinance.prototype.PMT = function(fractionalRate, numOfPayments, principal) {\n  return -principal * fractionalRate/(1-Math.pow(1+fractionalRate,-numOfPayments))\n};\n\n// IAR calculates the Inflation-adjusted return\nFinance.prototype.IAR = function(investmentReturn, inflationRate){\n  return 100 * (((1 + investmentReturn) / (1 + inflationRate)) - 1);\n}\n\n// XIRR - IRR for irregular intervals\nFinance.prototype.XIRR = function(cfs, dts, guess) {\nif (cfs.length != dts.length) throw new Error('Number of cash flows and dates should match');\n\n  var positive, negative;\n  Array.prototype.slice.call(cfs).forEach(function (value) {\n    if (value > 0) positive = true;\n    if (value < 0) negative = true;\n  });\n\n  if (!positive || !negative) throw new Error('XIRR requires at least one positive value and one negative value');\n  \n\n  guess = !!guess ? guess : 0;\n\n  var limit = 100; //loop limit\n  var guess_last;\n  var durs = [];\n\n  durs.push(0);\n\n  //Create Array of durations from First date\n  for(var i = 1; i < dts.length; i++) {\n    durs.push(durYear(dts[0], dts[i]));\n  }\n  \n  do {\n    guess_last = guess;\n    guess = guess_last - sumEq(cfs, durs, guess_last);\n    limit--;\n    \n  }while(guess_last.toFixed(5) != guess.toFixed(5) && limit > 0);\n\n  var xirr = guess_last.toFixed(5) != guess.toFixed(5) ? null : guess*100;\n\n  return Math.round(xirr * 100) / 100;\n};\n\n//Returns Sum of f(x)/f'(x)\nfunction sumEq(cfs, durs, guess) {\n  var sum_fx = 0;\n  var sum_fdx = 0;\n  for (var i = 0; i < cfs.length; i++) {\n    sum_fx = sum_fx + (cfs[i] / Math.pow(1 + guess, durs[i]));\n  }\n  for ( i = 0; i < cfs.length; i++) {\n    sum_fdx = sum_fdx + (-cfs[i] * durs[i] * Math.pow(1 + guess, -1 - durs[i]));\n  }\n  return sum_fx / sum_fdx;\n}\n\n//Returns duration in years between two dates\nfunction durYear(first, last) {\n  return (Math.abs(last.getTime() - first.getTime()) / (1000 * 3600 * 24 * 365));\n}\n\nif (typeof exports !== 'undefined') {\n  if (typeof module !== 'undefined' && module.exports) {\n      module.exports = Finance;\n      module.exports.Finance = Finance;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}