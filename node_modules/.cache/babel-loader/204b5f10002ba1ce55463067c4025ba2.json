{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addString;\n\nvar _babelTypes = _interopRequireDefault(require(\"../lib/babel-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction addString(node, rStr) {\n  _babelTypes.default.assertStringLiteral(rStr);\n\n  const lStr = _babelTypes.default.asStringLiteral(node);\n\n  if (lStr) {\n    return _babelTypes.default.stringLiteral(lStr.value + rStr.value);\n  }\n\n  const lBinary = _babelTypes.default.asBinaryExpression(node, {\n    operator: '+'\n  });\n\n  if (lBinary) {\n    const lStr = _babelTypes.default.asStringLiteral(lBinary.right);\n\n    if (lStr) {\n      return _babelTypes.default.binaryExpression('+', lBinary.left, addString(lStr, rStr));\n    }\n  }\n\n  return _babelTypes.default.binaryExpression('+', node, rStr);\n}","map":{"version":3,"sources":["/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/node_modules/babel-plugin-transform-react-pug/dist/utils/add-string.js"],"names":["Object","defineProperty","exports","value","default","addString","_babelTypes","_interopRequireDefault","require","obj","__esModule","node","rStr","assertStringLiteral","lStr","asStringLiteral","stringLiteral","lBinary","asBinaryExpression","operator","right","binaryExpression","left"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,WAAW,GAAGC,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAxC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,SAASJ,SAAT,CAAmBM,IAAnB,EAAyBC,IAAzB,EAA+B;AAC7BN,EAAAA,WAAW,CAACF,OAAZ,CAAoBS,mBAApB,CAAwCD,IAAxC;;AAEA,QAAME,IAAI,GAAGR,WAAW,CAACF,OAAZ,CAAoBW,eAApB,CAAoCJ,IAApC,CAAb;;AAEA,MAAIG,IAAJ,EAAU;AACR,WAAOR,WAAW,CAACF,OAAZ,CAAoBY,aAApB,CAAkCF,IAAI,CAACX,KAAL,GAAaS,IAAI,CAACT,KAApD,CAAP;AACD;;AAED,QAAMc,OAAO,GAAGX,WAAW,CAACF,OAAZ,CAAoBc,kBAApB,CAAuCP,IAAvC,EAA6C;AAC3DQ,IAAAA,QAAQ,EAAE;AADiD,GAA7C,CAAhB;;AAIA,MAAIF,OAAJ,EAAa;AACX,UAAMH,IAAI,GAAGR,WAAW,CAACF,OAAZ,CAAoBW,eAApB,CAAoCE,OAAO,CAACG,KAA5C,CAAb;;AAEA,QAAIN,IAAJ,EAAU;AACR,aAAOR,WAAW,CAACF,OAAZ,CAAoBiB,gBAApB,CAAqC,GAArC,EAA0CJ,OAAO,CAACK,IAAlD,EAAwDjB,SAAS,CAACS,IAAD,EAAOF,IAAP,CAAjE,CAAP;AACD;AACF;;AAED,SAAON,WAAW,CAACF,OAAZ,CAAoBiB,gBAApB,CAAqC,GAArC,EAA0CV,IAA1C,EAAgDC,IAAhD,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addString;\n\nvar _babelTypes = _interopRequireDefault(require(\"../lib/babel-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addString(node, rStr) {\n  _babelTypes.default.assertStringLiteral(rStr);\n\n  const lStr = _babelTypes.default.asStringLiteral(node);\n\n  if (lStr) {\n    return _babelTypes.default.stringLiteral(lStr.value + rStr.value);\n  }\n\n  const lBinary = _babelTypes.default.asBinaryExpression(node, {\n    operator: '+'\n  });\n\n  if (lBinary) {\n    const lStr = _babelTypes.default.asStringLiteral(lBinary.right);\n\n    if (lStr) {\n      return _babelTypes.default.binaryExpression('+', lBinary.left, addString(lStr, rStr));\n    }\n  }\n\n  return _babelTypes.default.binaryExpression('+', node, rStr);\n}"]},"metadata":{},"sourceType":"script"}