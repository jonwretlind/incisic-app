{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _babelTypes = require(\"../lib/babel-types\");\n\nfunction addLocToAst(_ast) {\n  let line = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _babelTypes.getCurrentLocation)().start.line;\n  const ast = _ast;\n\n  if (ast.loc) {\n    ast.loc = {\n      start: {\n        line: line + ast.loc.start.line - 1,\n        column: 0\n      },\n      end: {\n        line: line + ast.loc.end.line - 1,\n        column: 0\n      }\n    };\n    Object.keys(ast).forEach(key => {\n      if (Array.isArray(ast[key])) {\n        ast[key].forEach(n => addLocToAst(n, line));\n      } else if (ast[key] && typeof ast[key] === 'object') {\n        addLocToAst(ast[key], line);\n      }\n    });\n  }\n}\n\nvar _default = addLocToAst;\nexports.default = _default;","map":{"version":3,"sources":["/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/node_modules/babel-plugin-transform-react-pug/dist/utils/add-loc-to-ast.js"],"names":["Object","defineProperty","exports","value","default","_babelTypes","require","addLocToAst","_ast","line","getCurrentLocation","start","ast","loc","column","end","keys","forEach","key","Array","isArray","n","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAAzB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAAoF;AAAA,MAAzDC,IAAyD,uEAAlD,CAAC,GAAGJ,WAAW,CAACK,kBAAhB,IAAsCC,KAAtC,CAA4CF,IAAM;AAClF,QAAMG,GAAG,GAAGJ,IAAZ;;AAEA,MAAII,GAAG,CAACC,GAAR,EAAa;AACXD,IAAAA,GAAG,CAACC,GAAJ,GAAU;AACRF,MAAAA,KAAK,EAAE;AACLF,QAAAA,IAAI,EAAEA,IAAI,GAAGG,GAAG,CAACC,GAAJ,CAAQF,KAAR,CAAcF,IAArB,GAA4B,CAD7B;AAELK,QAAAA,MAAM,EAAE;AAFH,OADC;AAKRC,MAAAA,GAAG,EAAE;AACHN,QAAAA,IAAI,EAAEA,IAAI,GAAGG,GAAG,CAACC,GAAJ,CAAQE,GAAR,CAAYN,IAAnB,GAA0B,CAD7B;AAEHK,QAAAA,MAAM,EAAE;AAFL;AALG,KAAV;AAUAd,IAAAA,MAAM,CAACgB,IAAP,CAAYJ,GAAZ,EAAiBK,OAAjB,CAAyBC,GAAG,IAAI;AAC9B,UAAIC,KAAK,CAACC,OAAN,CAAcR,GAAG,CAACM,GAAD,CAAjB,CAAJ,EAA6B;AAC3BN,QAAAA,GAAG,CAACM,GAAD,CAAH,CAASD,OAAT,CAAiBI,CAAC,IAAId,WAAW,CAACc,CAAD,EAAIZ,IAAJ,CAAjC;AACD,OAFD,MAEO,IAAIG,GAAG,CAACM,GAAD,CAAH,IAAY,OAAON,GAAG,CAACM,GAAD,CAAV,KAAoB,QAApC,EAA8C;AACnDX,QAAAA,WAAW,CAACK,GAAG,CAACM,GAAD,CAAJ,EAAWT,IAAX,CAAX;AACD;AACF,KAND;AAOD;AACF;;AAED,IAAIa,QAAQ,GAAGf,WAAf;AACAL,OAAO,CAACE,OAAR,GAAkBkB,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _babelTypes = require(\"../lib/babel-types\");\n\nfunction addLocToAst(_ast, line = (0, _babelTypes.getCurrentLocation)().start.line) {\n  const ast = _ast;\n\n  if (ast.loc) {\n    ast.loc = {\n      start: {\n        line: line + ast.loc.start.line - 1,\n        column: 0\n      },\n      end: {\n        line: line + ast.loc.end.line - 1,\n        column: 0\n      }\n    };\n    Object.keys(ast).forEach(key => {\n      if (Array.isArray(ast[key])) {\n        ast[key].forEach(n => addLocToAst(n, line));\n      } else if (ast[key] && typeof ast[key] === 'object') {\n        addLocToAst(ast[key], line);\n      }\n    });\n  }\n}\n\nvar _default = addLocToAst;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}