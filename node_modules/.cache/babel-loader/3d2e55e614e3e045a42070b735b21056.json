{"ast":null,"code":"var _jsxFileName = \"/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/src/MyCurve.js\";\nimport './MyCurve.css';\nimport { withStyles } from '@mui/material/styles';\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport Finance from 'financejs';\nimport Tabs from '@mui/material/Tabs';\nimport Typography from '@mui/material/Typography';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\n\nclass MyCurve extends Component {\n  constructor() {\n    super();\n\n    this.changed = event => {\n      var principal = document.getElementById('starting_amt').value,\n          contrib = document.getElementById('contributions').value,\n          yrs = document.getElementById('years').value,\n          w_rate = document.getElementById('withdrawal_rt').value;\n    };\n\n    const principal = 0,\n          contrib = 1500,\n          yrs = 30,\n          w_rate = 0.04;\n  }\n\n  componentDidMount() {\n    this.drawChart(this.principal, this.contrib, this.yrs, this.w_rate);\n  }\n\n  drawChart(principal, contrib, yrs, w_rate) {\n    //compound curve 1\n    //create a dataset\n    let data = [];\n\n    for (var n = 0; n < yrs; n++) {}\n\n    var w = 700,\n        h = 300;\n    const svg = d3.select(\"#MyCurve\").append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n    /*  const lineGenerator = d3\n         .line()\n         .x((d) => xScale(xAccessor(d)))\n         .y((d) => yScale(yAccessor(d)))\n         .curve(d3.curveBasis);\n       svg.selectAll(\"rect\")\n          .data(data)\n          .enter()\n          .append(\"path\")\n          .attr(\"x\", (d, i) => i * 70)\n          .attr(\"y\", (d, i) => h - 10 * d)\n          .attr(\"width\", 65)\n          .attr(\"height\", (d, i) => d * 10)\n          .attr(\"fill\", \"green\");\n          */\n  }\n\n  render() {\n    const defaultVals = {\n      principal: 0,\n      contrib: 1500,\n      yrs: 30,\n      w_rate: 0.04\n    };\n    return /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        flexGrow: 1,\n        bgcolor: 'background.paper',\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"MyCurveDataEntry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"mycurve-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \"Starting Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"starting_amt\",\n      placeholder: this.principal,\n      onChange: event => this.changed(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, \"Number of Years Invested\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"years\",\n      placeholder: this.yrs,\n      onChange: event => this.changed(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, \"Annual Contributions\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"contributions\",\n      placeholder: this.contrib,\n      onChange: event => this.changed(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, \"Withdrawal Rate Per Year (%)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"withdrawal_rt\",\n      placeholder: this.w_rate,\n      onChange: event => this.changed(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"MyCurve\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default MyCurve;","map":{"version":3,"sources":["/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/src/MyCurve.js"],"names":["withStyles","React","Component","d3","Finance","Tabs","Typography","Tab","Box","Button","MyCurve","constructor","changed","event","principal","document","getElementById","value","contrib","yrs","w_rate","componentDidMount","drawChart","data","n","w","h","svg","select","append","attr","render","defaultVals","flexGrow","bgcolor","display"],"mappings":";AAAA,OAAO,eAAP;AACA,SAASA,UAAT,QAA2B,sBAA3B;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAC9BS,EAAAA,WAAW,GAAG;AACZ;;AADY,SA6CdC,OA7Cc,GA6CHC,KAAD,IAAW;AACnB,UAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAxD;AAAA,UACIC,OAAO,GAAGH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KADvD;AAAA,UAEIE,GAAG,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAF3C;AAAA,UAGIG,MAAM,GAAGL,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAHtD;AAID,KAlDa;;AAEZ,UAAMH,SAAS,GAAG,CAAlB;AAAA,UACMI,OAAO,GAAG,IADhB;AAAA,UAEMC,GAAG,GAAG,EAFZ;AAAA,UAGMC,MAAM,GAAG,IAHf;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL,CAAe,KAAKR,SAApB,EAA+B,KAAKI,OAApC,EAA6C,KAAKC,GAAlD,EAAuD,KAAKC,MAA5D;AACD;;AAEDE,EAAAA,SAAS,CAACR,SAAD,EAAYI,OAAZ,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkC;AACzC;AACA;AACA,QAAIG,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAApB,EAAyBK,CAAC,EAA1B,EAA8B,CAE7B;;AAGD,QAAIC,CAAC,GAAG,GAAR;AAAA,QAAaC,CAAC,GAAG,GAAjB;AACA,UAAMC,GAAG,GAAGxB,EAAE,CAACyB,MAAH,CAAU,UAAV,EACCC,MADD,CACQ,KADR,EAECC,IAFD,CAEM,OAFN,EAEeL,CAFf,EAGCK,IAHD,CAGM,QAHN,EAGgBJ,CAHhB,CAAZ;AAKF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG;;AASDK,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG;AACdlB,MAAAA,SAAS,EAAE,CADG;AAEdI,MAAAA,OAAO,EAAE,IAFK;AAGdC,MAAAA,GAAG,EAAE,EAHS;AAIdC,MAAAA,MAAM,EAAE;AAJM,KAApB;AAMA,wBACI,oBAAC,GAAD;AACE,MAAA,EAAE,EAAE;AAAEa,QAAAA,QAAQ,EAAE,CAAZ;AAAeC,QAAAA,OAAO,EAAE,kBAAxB;AAA4CC,QAAAA,OAAO,EAAE;AAArD,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,EAAE,EAAC,cADX;AAEQ,MAAA,WAAW,EAAE,KAAKrB,SAF1B;AAGQ,MAAA,QAAQ,EAAGD,KAAD,IAAS,KAAKD,OAAL,CAAaC,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,EAAE,EAAC,OADX;AAEQ,MAAA,WAAW,EAAE,KAAKM,GAF1B;AAGQ,MAAA,QAAQ,EAAGN,KAAD,IAAS,KAAKD,OAAL,CAAaC,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,CADF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,EAAE,EAAC,eADX;AAEQ,MAAA,WAAW,EAAE,KAAKK,OAF1B;AAGQ,MAAA,QAAQ,EAAGL,KAAD,IAAS,KAAKD,OAAL,CAAaC,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,EAAE,EAAC,eADX;AAEQ,MAAA,WAAW,EAAE,KAAKO,MAF1B;AAGQ,MAAA,QAAQ,EAAGP,KAAD,IAAS,KAAKD,OAAL,CAAaC,KAAb,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,CAjBF,CADA,CADF,CADF,eA6CE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CF,CAHA,CADJ;AAqDD;;AAjH6B;;AAqHhC,eAAeH,OAAf","sourcesContent":["import './MyCurve.css';\nimport { withStyles } from '@mui/material/styles';\nimport React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport Finance from 'financejs';\nimport Tabs from '@mui/material/Tabs';\nimport Typography from '@mui/material/Typography';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\n\nclass MyCurve extends Component {\n  constructor() {\n    super();\n    const principal = 0,\n          contrib = 1500,\n          yrs = 30,\n          w_rate = 0.04;\n  }\n\n  componentDidMount() {\n    this.drawChart(this.principal, this.contrib, this.yrs, this.w_rate);\n  }\n\n  drawChart(principal, contrib, yrs, w_rate) {\n    //compound curve 1\n    //create a dataset\n    let data = [];\n    for (var n = 0; n < yrs; n++) {\n\n    }\n\n\n    var w = 700, h = 300;\n    const svg = d3.select(\"#MyCurve\")\n                .append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h);\n\n  /*  const lineGenerator = d3\n       .line()\n       .x((d) => xScale(xAccessor(d)))\n       .y((d) => yScale(yAccessor(d)))\n       .curve(d3.curveBasis);\n\n    svg.selectAll(\"rect\")\n        .data(data)\n        .enter()\n        .append(\"path\")\n        .attr(\"x\", (d, i) => i * 70)\n        .attr(\"y\", (d, i) => h - 10 * d)\n        .attr(\"width\", 65)\n        .attr(\"height\", (d, i) => d * 10)\n        .attr(\"fill\", \"green\");\n        */\n  }\n\n  changed = (event) => {\n    var principal = document.getElementById('starting_amt').value,\n        contrib = document.getElementById('contributions').value,\n        yrs = document.getElementById('years').value,\n        w_rate = document.getElementById('withdrawal_rt').value;\n  }\n\n  render() {\n    const defaultVals = {\n          principal: 0,\n          contrib: 1500,\n          yrs: 30,\n          w_rate: 0.04\n        };\n    return (\n        <Box\n          sx={{ flexGrow: 1, bgcolor: 'background.paper', display: 'flex'}}\n        >\n        <div className=\"container\">\n          <div id=\"MyCurveDataEntry\">\n            <table className=\"mycurve-data\">\n            <tbody>\n              <tr>\n                <td>\n                  <label>Starting Amount</label>\n                  <input  type=\"number\"\n                          id=\"starting_amt\"\n                          placeholder={this.principal}\n                          onChange={(event)=>this.changed(event)}/>\n                </td>\n                <td>\n                  <label>Number of Years Invested</label>\n                  <input  type=\"number\"\n                          id=\"years\"\n                          placeholder={this.yrs}\n                          onChange={(event)=>this.changed(event)}/>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <label>Annual Contributions</label>\n                  <input  type=\"number\"\n                          id=\"contributions\"\n                          placeholder={this.contrib}\n                          onChange={(event)=>this.changed(event)}/>\n                </td>\n                <td>\n                  <label>Withdrawal Rate Per Year (%)</label>\n                  <input  type=\"number\"\n                          id=\"withdrawal_rt\"\n                          placeholder={this.w_rate}\n                          onChange={(event)=>this.changed(event)}/>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n            {/*<Button className=\"mycurve-btn\"\n                    variant=\"contained\"\n                    size=\"large\"\n            >\n              See My Curve\n            </Button>*/}\n          </div>\n          <div id=\"MyCurve\"></div>\n        </div>\n      </Box>\n    )\n  }\n\n}\n\nexport default MyCurve;\n"]},"metadata":{},"sourceType":"module"}