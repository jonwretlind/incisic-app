{"ast":null,"code":"'use strict';\n\nvar dirname = require('path').dirname;\n\nvar constantinople = require('constantinople');\n\nvar walk = require('pug-walk');\n\nvar error = require('pug-error');\n\nvar runFilter = require('./run-filter');\n\nmodule.exports = handleFilters;\n\nfunction handleFilters(ast, filters, options, filterAliases) {\n  options = options || {};\n  walk(ast, function (node) {\n    var dir = node.filename ? dirname(node.filename) : null;\n\n    if (node.type === 'Filter') {\n      handleNestedFilters(node, filters, options, filterAliases);\n      var text = getBodyAsText(node);\n      var attrs = getAttributes(node, options);\n      attrs.filename = node.filename;\n      node.type = 'Text';\n      node.val = filterWithFallback(node, text, attrs);\n    } else if (node.type === 'RawInclude' && node.filters.length) {\n      var firstFilter = node.filters.pop();\n      var attrs = getAttributes(firstFilter, options);\n      var filename = attrs.filename = node.file.fullPath;\n      var str = node.file.str;\n      node.type = 'Text';\n      node.val = filterFileWithFallback(firstFilter, filename, str, attrs);\n      node.filters.slice().reverse().forEach(function (filter) {\n        var attrs = getAttributes(filter, options);\n        attrs.filename = filename;\n        node.val = filterWithFallback(filter, node.val, attrs);\n      });\n      node.filters = undefined;\n      node.file = undefined;\n    }\n\n    function filterWithFallback(filter, text, attrs, funcName) {\n      try {\n        var filterName = getFilterName(filter);\n\n        if (filters && filters[filterName]) {\n          return filters[filterName](text, attrs);\n        } else {\n          return runFilter(filterName, text, attrs, dir, funcName);\n        }\n      } catch (ex) {\n        if (ex.code === 'UNKNOWN_FILTER') {\n          throw error(ex.code, ex.message, filter);\n        }\n\n        throw ex;\n      }\n    }\n\n    function filterFileWithFallback(filter, filename, text, attrs) {\n      var filterName = getFilterName(filter);\n\n      if (filters && filters[filterName]) {\n        return filters[filterName](text, attrs);\n      } else {\n        return filterWithFallback(filter, filename, attrs, 'renderFile');\n      }\n    }\n  }, {\n    includeDependencies: true\n  });\n\n  function getFilterName(filter) {\n    var filterName = filter.name;\n\n    if (filterAliases && filterAliases[filterName]) {\n      filterName = filterAliases[filterName];\n\n      if (filterAliases[filterName]) {\n        throw error('FILTER_ALISE_CHAIN', 'The filter \"' + filter.name + '\" is an alias for \"' + filterName + '\", which is an alias for \"' + filterAliases[filterName] + '\".  Pug does not support chains of filter aliases.', filter);\n      }\n    }\n\n    return filterName;\n  }\n\n  return ast;\n}\n\n;\n\nfunction handleNestedFilters(node, filters, options, filterAliases) {\n  if (node.block.nodes[0] && node.block.nodes[0].type === 'Filter') {\n    node.block.nodes[0] = handleFilters(node.block, filters, options, filterAliases).nodes[0];\n  }\n}\n\nfunction getBodyAsText(node) {\n  return node.block.nodes.map(function (node) {\n    return node.val;\n  }).join('');\n}\n\nfunction getAttributes(node, options) {\n  var attrs = {};\n  node.attrs.forEach(function (attr) {\n    try {\n      attrs[attr.name] = attr.val === true ? true : constantinople.toConstant(attr.val);\n    } catch (ex) {\n      if (/not constant/.test(ex.message)) {\n        throw error('FILTER_OPTION_NOT_CONSTANT', ex.message + ' All filters are rendered compile-time so filter options must be constants.', node);\n      }\n\n      throw ex;\n    }\n  });\n  var opts = options[node.name] || {};\n  Object.keys(opts).forEach(function (opt) {\n    if (!attrs.hasOwnProperty(opt)) {\n      attrs[opt] = opts[opt];\n    }\n  });\n  return attrs;\n}","map":{"version":3,"sources":["/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/node_modules/babel-plugin-transform-react-pug/node_modules/pug-filters/lib/handle-filters.js"],"names":["dirname","require","constantinople","walk","error","runFilter","module","exports","handleFilters","ast","filters","options","filterAliases","node","dir","filename","type","handleNestedFilters","text","getBodyAsText","attrs","getAttributes","val","filterWithFallback","length","firstFilter","pop","file","fullPath","str","filterFileWithFallback","slice","reverse","forEach","filter","undefined","funcName","filterName","getFilterName","ex","code","message","includeDependencies","name","block","nodes","map","join","attr","toConstant","test","opts","Object","keys","opt","hasOwnProperty"],"mappings":"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","sourcesContent":["'use strict';\n\nvar dirname = require('path').dirname;\nvar constantinople = require('constantinople');\nvar walk = require('pug-walk');\nvar error = require('pug-error');\nvar runFilter = require('./run-filter');\n\nmodule.exports = handleFilters;\nfunction handleFilters(ast, filters, options, filterAliases) {\n  options = options || {};\n  walk(ast, function (node) {\n    var dir = node.filename ? dirname(node.filename) : null;\n    if (node.type === 'Filter') {\n      handleNestedFilters(node, filters, options, filterAliases);\n      var text = getBodyAsText(node);\n      var attrs = getAttributes(node, options);\n      attrs.filename = node.filename;\n      node.type = 'Text';\n      node.val = filterWithFallback(node, text, attrs);\n    } else if (node.type === 'RawInclude' && node.filters.length) {\n      var firstFilter = node.filters.pop();\n      var attrs = getAttributes(firstFilter, options);\n      var filename = attrs.filename = node.file.fullPath;\n      var str = node.file.str;\n      node.type = 'Text';\n      node.val = filterFileWithFallback(firstFilter, filename, str, attrs);\n      node.filters.slice().reverse().forEach(function (filter) {\n        var attrs = getAttributes(filter, options);\n        attrs.filename = filename;\n        node.val = filterWithFallback(filter, node.val, attrs);\n      });\n      node.filters = undefined;\n      node.file = undefined;\n    }\n\n    function filterWithFallback(filter, text, attrs, funcName) {\n      try {\n        var filterName = getFilterName(filter);\n        if (filters && filters[filterName]) {\n          return filters[filterName](text, attrs);\n        } else {\n          return runFilter(filterName, text, attrs, dir, funcName);\n        }\n      } catch (ex) {\n        if (ex.code === 'UNKNOWN_FILTER') {\n          throw error(ex.code, ex.message, filter);\n        }\n        throw ex;\n      }\n    }\n\n    function filterFileWithFallback(filter, filename, text, attrs) {\n      var filterName = getFilterName(filter);\n      if (filters && filters[filterName]) {\n        return filters[filterName](text, attrs);\n      } else {\n        return filterWithFallback(filter, filename, attrs, 'renderFile');\n      }\n    }\n  }, {includeDependencies: true});\n  function getFilterName(filter) {\n    var filterName = filter.name;\n    if (filterAliases && filterAliases[filterName]) {\n      filterName = filterAliases[filterName];\n      if (filterAliases[filterName]) {\n        throw error(\n          'FILTER_ALISE_CHAIN',\n          'The filter \"' + filter.name + '\" is an alias for \"' + filterName +\n          '\", which is an alias for \"' + filterAliases[filterName] +\n          '\".  Pug does not support chains of filter aliases.',\n          filter\n        );\n      }\n    }\n    return filterName;\n  }\n  return ast;\n};\n\nfunction handleNestedFilters(node, filters, options, filterAliases) {\n  if (node.block.nodes[0] && node.block.nodes[0].type === 'Filter') {\n    node.block.nodes[0] = handleFilters(node.block, filters, options, filterAliases).nodes[0];\n  }\n}\n\nfunction getBodyAsText(node) {\n  return node.block.nodes.map(\n    function(node){ return node.val; }\n  ).join('');\n}\n\nfunction getAttributes(node, options) {\n  var attrs = {};\n  node.attrs.forEach(function (attr) {\n    try {\n      attrs[attr.name] = attr.val === true ? true : constantinople.toConstant(attr.val);\n    } catch (ex) {\n      if (/not constant/.test(ex.message)) {\n        throw error('FILTER_OPTION_NOT_CONSTANT', ex.message + ' All filters are rendered compile-time so filter options must be constants.', node);\n      }\n      throw ex;\n    }\n  });\n  var opts = options[node.name] || {};\n  Object.keys(opts).forEach(function (opt) {\n    if (!attrs.hasOwnProperty(opt)) {\n      attrs[opt] = opts[opt];\n    }\n  });\n  return attrs;\n}\n"]},"metadata":{},"sourceType":"script"}