{"ast":null,"code":"import Finance from 'financejs';\n\nfunction GoalSeek(account, targetValue) {\n  const finance = new Finance();\n  const n = account.length; // number of periods\n\n  let rate = 0.1; // initial guess for the rate of return\n  // calculate the net present value of the investments at the initial guess for the rate of return\n\n  let npv = account[0].balBOY;\n\n  for (let i = 0; i < n; i++) {\n    npv = finance.PV(rate, account[i].balEOY);\n  } // iterate until the net present value is close enough to the target value\n\n\n  const tolerance = 1e-2; // tolerance for the error between the net present value and the target value\n\n  while (Math.abs(npv - targetValue) > tolerance) {\n    // adjust the rate of return based on the error between the net present value and the target value\n    rate += (targetValue - npv) / npv; // recalculate the net present value at the new rate of return\n    //npv = account[0].balBOY;\n\n    npv = finance.PV(rate, account[i].balEOY);\n  }\n\n  return rate;\n}\n\nexport default GoalSeek;","map":{"version":3,"sources":["/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/src/helpers/goalseek.js"],"names":["Finance","GoalSeek","account","targetValue","finance","n","length","rate","npv","balBOY","i","PV","balEOY","tolerance","Math","abs"],"mappings":"AACA,OAAOA,OAAP,MAAoB,WAApB;;AAEA,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,WAA3B,EAAwC;AACtC,QAAMC,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AACA,QAAMK,CAAC,GAAGH,OAAO,CAACI,MAAlB,CAFsC,CAEX;;AAC3B,MAAIC,IAAI,GAAG,GAAX,CAHsC,CAGrB;AAEjB;;AACA,MAAIC,GAAG,GAAGN,OAAO,CAAC,CAAD,CAAP,CAAWO,MAArB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,CAApB,EAAuBK,CAAC,EAAxB,EAA4B;AAC1BF,IAAAA,GAAG,GAAGJ,OAAO,CAACO,EAAR,CAAWJ,IAAX,EAAiBL,OAAO,CAACQ,CAAD,CAAP,CAAWE,MAA5B,CAAN;AACD,GATqC,CAWtC;;;AACA,QAAMC,SAAS,GAAG,IAAlB,CAZsC,CAYb;;AACzB,SAAOC,IAAI,CAACC,GAAL,CAASP,GAAG,GAAGL,WAAf,IAA8BU,SAArC,EAAgD;AAC9C;AACAN,IAAAA,IAAI,IAAI,CAACJ,WAAW,GAAGK,GAAf,IAAsBA,GAA9B,CAF8C,CAI9C;AACA;;AACAA,IAAAA,GAAG,GAAGJ,OAAO,CAACO,EAAR,CAAWJ,IAAX,EAAiBL,OAAO,CAACQ,CAAD,CAAP,CAAWE,MAA5B,CAAN;AAED;;AAED,SAAOL,IAAP;AACD;;AAED,eAAeN,QAAf","sourcesContent":["\nimport Finance from 'financejs';\n\nfunction GoalSeek(account, targetValue) {\n  const finance = new Finance();\n  const n = account.length;  // number of periods\n  let rate = 0.1;  // initial guess for the rate of return\n\n  // calculate the net present value of the investments at the initial guess for the rate of return\n  let npv = account[0].balBOY;\n  for (let i = 0; i < n; i++) {\n    npv = finance.PV(rate, account[i].balEOY);\n  }\n\n  // iterate until the net present value is close enough to the target value\n  const tolerance = 1e-2;  // tolerance for the error between the net present value and the target value\n  while (Math.abs(npv - targetValue) > tolerance) {\n    // adjust the rate of return based on the error between the net present value and the target value\n    rate += (targetValue - npv) / npv;\n\n    // recalculate the net present value at the new rate of return\n    //npv = account[0].balBOY;\n    npv = finance.PV(rate, account[i].balEOY);\n\n  }\n\n  return rate;\n}\n\nexport default GoalSeek;\n"]},"metadata":{},"sourceType":"module"}