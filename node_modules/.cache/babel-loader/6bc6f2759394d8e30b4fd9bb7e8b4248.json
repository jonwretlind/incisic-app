{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _parseExpression = _interopRequireDefault(require(\"../utils/parse-expression\"));\n\nvar _parseStatement = _interopRequireDefault(require(\"../utils/parse-statement\"));\n\nvar _babelTypes = _interopRequireDefault(require(\"../lib/babel-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction visitBufferedCode(node, context) {\n  return (0, _parseExpression.default)(node.val, context);\n}\n\nfunction declareProperty(kind, prop, context) {\n  switch (prop.type) {\n    case 'RestElement':\n      return _objectSpread({}, prop, {\n        argument: declareLVal(kind, prop.argument, context)\n      });\n\n    case 'ObjectProperty':\n      return _objectSpread({}, prop, {\n        value: prop.value && declareLVal(kind, prop.value, context)\n      });\n\n    default:\n      throw new Error('Unexpected Property Type, ' + prop.type);\n  }\n}\n\nfunction declareLVal(kind, val, context) {\n  switch (val.type) {\n    case 'ArrayPattern':\n      return _objectSpread({}, val, {\n        elements: val.elements.map(el => declareLVal(kind, el, context))\n      });\n\n    case 'Identifier':\n      return context.declareVariable(kind, val.name).id;\n\n    case 'ObjectPattern':\n      return _objectSpread({}, val, {\n        properties: val.properties.map(p => declareProperty(kind, p, context))\n      });\n\n    case 'RestElement':\n      return _objectSpread({}, val, {\n        argument: declareLVal(kind, val.argument, context)\n      });\n\n    default:\n      throw new Error('Unexpected Left Value Type, ' + val.type);\n  }\n}\n\nfunction visitUnbufferedCode(node, context) {\n  // TODO: hoist and rename `const` and `let` variables\n  const statement = (0, _parseStatement.default)(node.val, context);\n\n  const variableDeclaration = _babelTypes.default.asVariableDeclaration(statement);\n\n  if (variableDeclaration) {\n    const kind = variableDeclaration.kind;\n    const expressions = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = variableDeclaration.declarations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        const declaration = _step.value;\n        const lval = declareLVal(kind, declaration.id, context);\n        expressions.push(_babelTypes.default.assignmentExpression('=', lval, declaration.init || _babelTypes.default.identifier('undefined')));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    expressions.push(_babelTypes.default.identifier('null'));\n    return _babelTypes.default.sequenceExpression(expressions);\n  }\n\n  if (_babelTypes.default.isExpressionStatement(statement)) {\n    return _babelTypes.default.sequenceExpression([statement.expression, _babelTypes.default.identifier('null')]);\n  }\n\n  return _babelTypes.default.callExpression(_babelTypes.default.arrowFunctionExpression([], _babelTypes.default.blockStatement([statement])), []);\n}\n\nconst CodeVisitor = {\n  expression(node, context) {\n    if (node.buffer && !node.mustEscape) {\n      throw new Error('Unescaped, buffered code is not supported in react-pug');\n    }\n\n    if (node.buffer) {\n      return visitBufferedCode(node, context);\n    } else {\n      return visitUnbufferedCode(node, context);\n    }\n  }\n\n};\nvar _default = CodeVisitor;\nexports.default = _default;","map":{"version":3,"sources":["/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/node_modules/babel-plugin-transform-react-pug/dist/visitors/Code.js"],"names":["Object","defineProperty","exports","value","default","_parseExpression","_interopRequireDefault","require","_parseStatement","_babelTypes","obj","__esModule","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","visitBufferedCode","node","context","val","declareProperty","kind","prop","type","argument","declareLVal","Error","elements","map","el","declareVariable","name","id","properties","p","visitUnbufferedCode","statement","variableDeclaration","asVariableDeclaration","expressions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","declarations","Symbol","iterator","_step","next","done","declaration","lval","push","assignmentExpression","init","identifier","err","return","sequenceExpression","isExpressionStatement","expression","callExpression","arrowFunctionExpression","blockStatement","CodeVisitor","buffer","mustEscape","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _parseExpression = _interopRequireDefault(require(\"../utils/parse-expression\"));\n\nvar _parseStatement = _interopRequireDefault(require(\"../utils/parse-statement\"));\n\nvar _babelTypes = _interopRequireDefault(require(\"../lib/babel-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction visitBufferedCode(node, context) {\n  return (0, _parseExpression.default)(node.val, context);\n}\n\nfunction declareProperty(kind, prop, context) {\n  switch (prop.type) {\n    case 'RestElement':\n      return _objectSpread({}, prop, {\n        argument: declareLVal(kind, prop.argument, context)\n      });\n\n    case 'ObjectProperty':\n      return _objectSpread({}, prop, {\n        value: prop.value && declareLVal(kind, prop.value, context)\n      });\n\n    default:\n      throw new Error('Unexpected Property Type, ' + prop.type);\n  }\n}\n\nfunction declareLVal(kind, val, context) {\n  switch (val.type) {\n    case 'ArrayPattern':\n      return _objectSpread({}, val, {\n        elements: val.elements.map(el => declareLVal(kind, el, context))\n      });\n\n    case 'Identifier':\n      return context.declareVariable(kind, val.name).id;\n\n    case 'ObjectPattern':\n      return _objectSpread({}, val, {\n        properties: val.properties.map(p => declareProperty(kind, p, context))\n      });\n\n    case 'RestElement':\n      return _objectSpread({}, val, {\n        argument: declareLVal(kind, val.argument, context)\n      });\n\n    default:\n      throw new Error('Unexpected Left Value Type, ' + val.type);\n  }\n}\n\nfunction visitUnbufferedCode(node, context) {\n  // TODO: hoist and rename `const` and `let` variables\n  const statement = (0, _parseStatement.default)(node.val, context);\n\n  const variableDeclaration = _babelTypes.default.asVariableDeclaration(statement);\n\n  if (variableDeclaration) {\n    const kind = variableDeclaration.kind;\n    const expressions = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = variableDeclaration.declarations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        const declaration = _step.value;\n        const lval = declareLVal(kind, declaration.id, context);\n        expressions.push(_babelTypes.default.assignmentExpression('=', lval, declaration.init || _babelTypes.default.identifier('undefined')));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    expressions.push(_babelTypes.default.identifier('null'));\n    return _babelTypes.default.sequenceExpression(expressions);\n  }\n\n  if (_babelTypes.default.isExpressionStatement(statement)) {\n    return _babelTypes.default.sequenceExpression([statement.expression, _babelTypes.default.identifier('null')]);\n  }\n\n  return _babelTypes.default.callExpression(_babelTypes.default.arrowFunctionExpression([], _babelTypes.default.blockStatement([statement])), []);\n}\n\nconst CodeVisitor = {\n  expression(node, context) {\n    if (node.buffer && !node.mustEscape) {\n      throw new Error('Unescaped, buffered code is not supported in react-pug');\n    }\n\n    if (node.buffer) {\n      return visitBufferedCode(node, context);\n    } else {\n      return visitUnbufferedCode(node, context);\n    }\n  }\n\n};\nvar _default = CodeVisitor;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}