{"ast":null,"code":"var _jsxFileName = \"/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/src/ror.js\";\n\n/* ======================================================\n   =========== AVERAGE VS ACTUAL ROR CALC JS ============\n   ====================================================== */\nimport $ from 'jquery';\nimport React from 'react';\nimport { Component } from 'react';\n\nclass RORCalc extends Component {\n  constructor() {\n    super(); // +++++++++++++++++++++++ //\n    // ++ Global Variables  ++ //\n    // +++++++++++++++++++++++ //\n\n    var annPay,\n        mngFee,\n        intRate,\n        numYears,\n        myCalcPVonIR,\n        actROR,\n        BOY,\n        IL,\n        ILPC,\n        ILVal,\n        startYear = 1963,\n        checkedUsePortfolio,\n        checkedStocks,\n        checkedBonds,\n        checkedTreas,\n        percentStocks,\n        percentBonds,\n        percentTreas,\n        loggedInState = false,\n        calcName,\n        actv,\n        theData,\n        stBOY,\n        stAnnPay,\n        bnAnnPay,\n        bnBOY,\n        trAnnPay,\n        trBOY,\n        newBalance,\n        tyrs = 1,\n        recalcFlag = false,\n        EconData = [],\n        RORTableArray = [],\n        BOYBalance = [],\n        EOYBalance = []; //const mathfuncts = new MathFuncts();\n    //const recalcvalues = new reCalcValues();\n    //const dispcomp = new displayComposite();\n\n    const _this = this;\n  }\n\n  jQuery() {\n    // +++++++++++++++++++++++++++ //\n    // +++ Data/Ajax Functions +++ //\n    // +++++++++++++++++++++++++++ //\n    // uses REST API http://localhost:5000/all\n    $.get(\"http://18.188.124.75:5000/all\", function (res) {\n      this.EconData = JSON.parse(res);\n    });\n  }\n\n  componentDidMount() {\n    this.jQuery();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"EconData\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, this.jQuery()));\n  }\n\n}\n\nexport default RORCalc;","map":{"version":3,"sources":["/Users/jonwretlind/Dropbox (1)/__Jon/__Jon Project Files/Code Projects/Incisic/incisic-app/src/ror.js"],"names":["$","React","Component","RORCalc","constructor","annPay","mngFee","intRate","numYears","myCalcPVonIR","actROR","BOY","IL","ILPC","ILVal","startYear","checkedUsePortfolio","checkedStocks","checkedBonds","checkedTreas","percentStocks","percentBonds","percentTreas","loggedInState","calcName","actv","theData","stBOY","stAnnPay","bnAnnPay","bnBOY","trAnnPay","trBOY","newBalance","tyrs","recalcFlag","EconData","RORTableArray","BOYBalance","EOYBalance","_this","jQuery","get","res","JSON","parse","componentDidMount","render"],"mappings":";;AACA;AACA;AACA;AAEA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC/BE,EAAAA,WAAW,GAAG;AACX,YADW,CAGX;AACA;AACA;;AACA,QAAIC,MAAJ;AAAA,QACIC,MADJ;AAAA,QAEIC,OAFJ;AAAA,QAGIC,QAHJ;AAAA,QAIIC,YAJJ;AAAA,QAKIC,MALJ;AAAA,QAMIC,GANJ;AAAA,QAOIC,EAPJ;AAAA,QAQIC,IARJ;AAAA,QASIC,KATJ;AAAA,QAUIC,SAAS,GAAG,IAVhB;AAAA,QAWIC,mBAXJ;AAAA,QAYIC,aAZJ;AAAA,QAaIC,YAbJ;AAAA,QAcIC,YAdJ;AAAA,QAeIC,aAfJ;AAAA,QAgBIC,YAhBJ;AAAA,QAiBIC,YAjBJ;AAAA,QAkBIC,aAAa,GAAG,KAlBpB;AAAA,QAmBIC,QAnBJ;AAAA,QAoBIC,IApBJ;AAAA,QAqBIC,OArBJ;AAAA,QAsBIC,KAtBJ;AAAA,QAuBIC,QAvBJ;AAAA,QAwBIC,QAxBJ;AAAA,QAyBIC,KAzBJ;AAAA,QA0BIC,QA1BJ;AAAA,QA2BIC,KA3BJ;AAAA,QA4BIC,UA5BJ;AAAA,QA6BIC,IAAI,GAAG,CA7BX;AAAA,QA8BIC,UAAU,GAAG,KA9BjB;AAAA,QA+BIC,QAAQ,GAAG,EA/Bf;AAAA,QAgCIC,aAAa,GAAG,EAhCpB;AAAA,QAiCIC,UAAU,GAAG,EAjCjB;AAAA,QAkCIC,UAAU,GAAG,EAlCjB,CANW,CA0CP;AACA;AACA;;AAEA,UAAMC,KAAK,GAAG,IAAd;AAEL;;AAEDC,EAAAA,MAAM,GAAG;AACN;AACA;AACA;AACA;AACAzC,IAAAA,CAAC,CAAC0C,GAAF,CAAM,+BAAN,EAAuC,UAASC,GAAT,EAAc;AACpD,WAAKP,QAAL,GAAgBQ,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAhB;AACA,KAFD;AAGF;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,MAAL;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKN,MAAL,EAAJ,CAFF,CADF;AAMD;;AAxE6B;;AA2EhC,eAAetC,OAAf","sourcesContent":["\n/* ======================================================\n   =========== AVERAGE VS ACTUAL ROR CALC JS ============\n   ====================================================== */\n\nimport $ from 'jquery';\nimport React from 'react';\nimport { Component } from 'react';\n\nclass RORCalc extends Component {\n\tconstructor() {\n    super()\n\n    // +++++++++++++++++++++++ //\n    // ++ Global Variables  ++ //\n    // +++++++++++++++++++++++ //\n    var annPay,\n        mngFee,\n        intRate,\n        numYears,\n        myCalcPVonIR,\n        actROR,\n        BOY,\n        IL,\n        ILPC,\n        ILVal,\n        startYear = 1963,\n        checkedUsePortfolio,\n        checkedStocks,\n        checkedBonds,\n        checkedTreas,\n        percentStocks,\n        percentBonds,\n        percentTreas,\n        loggedInState = false,\n        calcName,\n        actv,\n        theData,\n        stBOY,\n        stAnnPay,\n        bnAnnPay,\n        bnBOY,\n        trAnnPay,\n        trBOY,\n        newBalance,\n        tyrs = 1,\n        recalcFlag = false,\n        EconData = [],\n        RORTableArray = [],\n        BOYBalance = [],\n        EOYBalance = [];\n\n        //const mathfuncts = new MathFuncts();\n        //const recalcvalues = new reCalcValues();\n        //const dispcomp = new displayComposite();\n\n        const _this = this;\n\n  }\n\n  jQuery() {\n    \t// +++++++++++++++++++++++++++ //\n    \t// +++ Data/Ajax Functions +++ //\n    \t// +++++++++++++++++++++++++++ //\n    \t// uses REST API http://localhost:5000/all\n    \t$.get(\"http://18.188.124.75:5000/all\", function(res) {\n    \t\tthis.EconData = JSON.parse(res);\n    \t});\n  }\n\n  componentDidMount() {\n    this.jQuery()\n  }\n\n  render() {\n    return(\n      <div>\n        <p>EconData</p>\n        <p>{this.jQuery()}</p>\n      </div>\n    );\n  }\n}\n\nexport default RORCalc;\n"]},"metadata":{},"sourceType":"module"}